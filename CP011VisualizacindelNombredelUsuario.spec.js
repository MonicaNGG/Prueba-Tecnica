// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('CP011-Visualización del Nombre del Usuario', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('CP011-Visualización del Nombre del Usuario', async function() {
    // Test name: CP011-Visualización del Nombre del Usuario
    // Step # | name | target | value
    // 1 | open | https://test-qa.inlaze.com/auth/sign-in | 
    await driver.get("https://test-qa.inlaze.com/auth/sign-in")
    // 2 | setWindowSize | 1528x808 | 
    await driver.manage().window().setRect({ width: 1528, height: 808 })
    // 3 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 4 | type | id=email | monicag.3221@gmail.com
    await driver.findElement(By.id("email")).sendKeys("monicag.3221@gmail.com")
    // 5 | click | css=.w-full > #password | 
    await driver.findElement(By.css(".w-full > #password")).click()
    // 6 | type | css=.w-full > #password | Monica1234*
    await driver.findElement(By.css(".w-full > #password")).sendKeys("Monica1234*")
    // 7 | click | css=.btn:nth-child(2) | 
    await driver.findElement(By.css(".btn:nth-child(2)")).click()
    // 8 | click | css=.btn:nth-child(3) | 
    await driver.findElement(By.css(".btn:nth-child(3)")).click()
    // 9 | assertText | css=.flex > .font-bold | Mónica Natalia Gallego Gómez
    assert(await driver.findElement(By.css(".flex > .font-bold")).getText() == "Mónica Natalia Gallego Gómez")
  })
})
